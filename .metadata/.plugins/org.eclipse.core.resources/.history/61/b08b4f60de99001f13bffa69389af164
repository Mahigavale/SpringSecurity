package com.example.Littleangel.Security;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.http.HttpMethod;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.provisioning.InMemoryUserDetailsManager;
import org.springframework.security.web.SecurityFilterChain;

@EnableWebSecurity
@Configuration
public class mysecurity {
	
	
	@Bean
	public SecurityFilterChain mysecurity(HttpSecurity http) throws Exception
	{
		http.
		 csrf().disable()
		 .authorizeRequests()
		 .requestMatchers(HttpMethod.GET).hasRole("ADMIN")
		 .anyRequest().permitAll()
		 .and()
		 .httpBasic();
		
		return http.build();
	}
	
	
	public UserDetailsService myusers()
	{
		UserDetails user=User.builder().username("Mansi").password("Man@123").roles("ADMIN").build();
		
		UserDetails user2=User.builder().username("Mahesh").password("ham@123").roles("USER").build();
		
		return new InMemoryUserDetailsManager()
	}
	
	
	
	

}
