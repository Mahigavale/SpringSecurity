package com.security.SpringSecurity6.Security;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.http.HttpMethod;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.provisioning.InMemoryUserDetailsManager;
import org.springframework.security.web.SecurityFilterChain;

@EnableWebSecurity
@Configuration
public class Mysecurity {
	
	@Bean
	public SecurityFilterChain mysecr(HttpSecurity http) throws Exception
	{
		
		http.
		csrf().disable()
		.authorizeHttpRequests()
		.requestMatchers(HttpMethod.GET).hasRole("ADMIN")
		.anyRequest().authenticated()
		.and()
		.httpBasic();
		
		return http.build();
	}
	
	
	
	@Bean
	public UserDetailsService userre()
	{
		
		UserDetails user1=User.builder().username("Mahesh").password("{noop}mgg").roles("ADMIN").build();
		
		return new InMemoryUserDetailsManager(user1);
	}

}
