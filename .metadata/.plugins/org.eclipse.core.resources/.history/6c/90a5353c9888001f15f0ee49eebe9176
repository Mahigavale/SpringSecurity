package com.security.Scrty;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.http.HttpMethod;
import org.springframework.security.authentication.AuthenticationProvider;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.provisioning.InMemoryUserDetailsManager;
import org.springframework.security.web.SecurityFilterChain;

@EnableWebSecurity
@Configuration
public class SecurityConfig {

	
	@Bean
	public SecurityFilterChain mysecuritty(HttpSecurity http) throws Exception
	{
		
		http.
		 csrf().disable()
		 .authorizeHttpRequests()
		 .requestMatchers(HttpMethod.GET).hasRole("ADMIN")
		 .anyRequest().authenticated()
		 .and()
		 .httpBasic();
		
		return http.build();
		 
	}
	
	@Bean
	public UserDetailsService myusers()
	{
		UserDetails users=User.builder().username("Mahesh")
				.password("{noop}Mahesh@123")
				.roles("ADMIN")
				.build();
		
		return new InMemoryUserDetailsManager(users);
	}
	
	
	@Bean
	public AuthenticationProvider authenticationprovider()
}
