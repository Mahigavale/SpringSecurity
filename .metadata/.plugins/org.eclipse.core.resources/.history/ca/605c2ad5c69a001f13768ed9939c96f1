package com.school.Security;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.AuthenticationProvider;
import org.springframework.security.authentication.dao.DaoAuthenticationProvider;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
@EnableWebSecurity
public class SecurityConfig {

	
	@Autowired
	private UserDetailsService myuserdetailsservice;
	
	
	@Bean
	public SecurityFilterChain mysecurity(HttpSecurity http) throws Exception
	{
		http
		.csrf().disable()
		.authorizeHttpRequests()
		.requestMatchers("/Admin/**").hasRole("ADMIN")
		.anyRequest().permitAll()
		.and()
		.httpBasic() ;
		
		return http.build();
	}
	
	
	@Bean
	public AuthenticationProvider myauthentication()
	{
		DaoAuthenticationProvider provider=new DaoAuthenticationProvider();
		
		provider.setPasswordEncoder(new BCryptPasswordEncoder());
		provider.setUserDetailsService(myuserdetailsservice);
		
		return provider;
		
	}
	
}
