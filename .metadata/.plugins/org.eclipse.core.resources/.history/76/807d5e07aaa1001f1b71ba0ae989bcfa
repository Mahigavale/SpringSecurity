package com.hotel.Servicetests;

import static org.junit.jupiter.api.Assertions.assertThrows;

import java.util.ArrayList;
import java.util.List;

import org.assertj.core.api.Assertions;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;
import org.springframework.boot.test.context.SpringBootTest;

import com.hotel.Exceptions.Hotelalreadyexists;
import com.hotel.Service.Hotelservice;
import com.hotel.entity.Hoteladdress;
import com.hotel.entity.Hotelentity;
import com.hotel.repository.Hotelrepo;

import jakarta.transaction.Transactional;

@SpringBootTest
@Transactional
public class Hotelservicetest {
	
	
	@Autowired
	private Hotelrepo repo;
	
	@Autowired
	private Hotelservice service;
	
	
	@Test
	public void add_duplicate_hotel_must_throw_an_exception () throws Hotelalreadyexists
	{
		 //Arrange
		
		 var address=new Hoteladdress("Pune","411057","Deccan");
			
			var hotel=new Hotelentity("Urban","M.Singh",address);
			
			var address1=new Hoteladdress("Mumbai","411001","Worli");
			
			var hotel1=new Hotelentity("Urban","V.Iyyer",address1);
			
			List<Hotelentity> hotels=new ArrayList<Hotelentity>();
			hotels.add(hotel);
			hotels.add(hotel1);
			
			//Act
			
				service.addhotel(hotel);
				service.addhotel(hotel1);
		
			
			
			var address2=new Hoteladdress("Mumbai","411001","Worli");
			var hotel2=new Hotelentity("Rural","V. Bhide",address2);
			
			
			
			
			
//		assertThrows(Hotelalreadyexists.class, ()->
//		{
//			service.addhotel(hotel2);
//		});
		
			
	}

}
